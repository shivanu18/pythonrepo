# Все задачи текущего блока решите с помощью генераторов списков!

# Задание-1:
# Дан список, заполненный произвольными целыми числами.
# Получить новый список, элементы которого будут
# квадратами элементов исходного списка
# [1, 2, 4, 0] --> [1, 4, 16, 0]

my_list = [1, 2, 4, 0]
sq_list = [a ** 2 for a in my_list]
print(sq_list)

# Задание-2:
# Даны два списка фруктов.
# Получить список фруктов, присутствующих в обоих исходных списках.

fruit_list = ['банан', 'апельсин', 'яблоко', 'груша']
new_list = ['киви', 'банан', 'персик', 'яблоко']
sort_list = list (set (fruit_list) & set (new_list))
print(sort_list)

# Задание-3:
# Дан список, заполненный произвольными числами.
# Получить список из элементов исходного, удовлетворяющих следующим условиям:
# + Элемент кратен 3
# + Элемент положительный
# + Элемент не кратен 4

my_list = [1, 2, 4, 9, 0, -3, 16, -23, -9]
sort_list = [el for el in my_list if el % 3 == 0 and el >=0 and el % 4 !=0]
print(sort_list)


#NORMAL
# Задание-1:
# Напишите скрипт, заполняющий указанный файл (самостоятельно задайте имя файла)
# произвольными целыми цифрами, в результате в файле должно быть
# 2500-значное произвольное число.
# Найдите и выведите самую длинную последовательность одинаковых цифр
# в вышезаполненном файле.

import random

max_num = 2500

list = [random.randint(0,9) for _ in range(max_num)]
list = ''.join(list(map(lambda x: str(x), list)))
print(list)
# Запись в файл
path = 'data\\' + 'script' + '.txt'
with open(path, 'w', encoding='UTF-8') as file:
    file.write(str(list))


# Задание-2
# Сформировать квадратную матрицу, в каждой строке которой находится ровно один ноль на случайном месте, остальные элементы тоже рандомные. 
# Пользователь вводит размер

N = int(input("Укажите размер: "))

matr = [[random.randint(1, 100) for j in range(N)] for i in range(N)]

for row in matr:
    row[random.randint(0, N - 1)] = 0

pprint.pprint(matr)
